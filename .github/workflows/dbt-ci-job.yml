name: dbt CI 

on:
  workflow_call:

jobs:
  dbt-build:
    runs-on: ubuntu-latest
    env:
      DBT_PROFILES_DIR: "."

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dbt + deps
        run: |
          python -m pip install --upgrade pip
          pip install "urllib3<2.0"
          pip install "dbt-core==1.10.10" dbt-duckdb duckdb

      - name: dbt deps
        run: dbt deps

      # ----------------- ARTIFACT FALLBACK (no cache) -----------------
      - name: Download latest state artifact from main
        id: get-state
        uses: dawidd6/action-download-artifact@v3
        with:
          # IMPORTANT: set this to the workflow file that publishes dbt-state-artifacts on main
          workflow: main-state.yml
          branch: main
          name: dbt-state-artifacts              # must match your upload name
          path: previous-state
          if_no_artifact_found: warn

      - name: Show what we downloaded
        run: |
          if [ -f previous-state/manifest.json ]; then
            echo "downloaded=yes (flat)"
          elif [ -f previous-state/target/manifest.json ]; then
            echo "downloaded=yes (under target/)"
          else
            echo "downloaded=no"
          fi
          ls -la previous-state || true
          ls -la previous-state/target || true

      # Pick the right state directory (artifact structure may be ./target/*)
      - name: Resolve STATE_DIR
        id: state-dir
        shell: bash
        run: |
          if [ -f previous-state/manifest.json ]; then
            echo "STATE_DIR=previous-state" >> $GITHUB_OUTPUT
          elif [ -f previous-state/target/manifest.json ]; then
            echo "STATE_DIR=previous-state/target" >> $GITHUB_OUTPUT
          else
            echo "STATE_DIR=" >> $GITHUB_OUTPUT
          fi

      # ----------------- BUILD -----------------
      - name: dbt build (self-contained; use artifact state if available)
        shell: bash
        run: |
          if [ -n "${{ steps.state-dir.outputs.STATE_DIR }}" ]; then
            echo "ðŸ”„ Using state from ${{ steps.state-dir.outputs.STATE_DIR }}"
            dbt build --select state:modified+ --state "${{ steps.state-dir.outputs.STATE_DIR }}"
          else
            echo "ðŸš€ No artifact state found â†’ full build"
            dbt build
          fi

      - name: dbt docs generate
        run: dbt docs generate

      # ----------------- PUBLISH ARTIFACTS FOR NEXT RUNS -----------------
      - name: Upload pipeline results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dbt-pipeline-results
          path: |
            workshop.duckdb
            target/
            logs/
          retention-days: 7

      - name: Upload state artifact (global)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dbt-state-artifacts            # <-- this is what we download next time
          path: target/                        # contains manifest.json, catalog.json, etc.
          retention-days: 14
